#ifndef FTMSERVICEFWGEN1_H
#define FTMSERVICEFWGEN1_H

/*
 * automatically generated with the command line :
 * /usr/bin/m-servicefwgen -p /home/holger/hx86/master/libdui/libdui/tests/ft_mservicefwgen/com.nokia.FtMServiceFwGen1
 */

#include <QObject>

#include <mservicefwbaseif.h>

namespace fakegalleryserviceinterface {

class FtMServiceFwGen1 : public MServiceFwBaseIf
{
Q_OBJECT

public:
    void bug172441();
    void bug172441( const QString &_taskTitle );
    bool showGridWithCapturedContent( int limit );
    bool showImage( const QString &uri, const QString &playlistName, const QString &defaultBackPage );
    void showImage( const QString &uri, const QStringList &uriList );
    void showImage( const QString &uri, const QStringList &uriList, const QString &_taskTitle );
    bool showPage( const QString &targetPage, const QString &previousPage );
    bool showSettings();

public:
    /*!
     * @brief Constructs a base interface
     * @param preferredService the preferred service provider. Leave
     * empty if no preferred provider. In most cases, this should be left
     * empty.
     * @param parent Parent object
     */

    FtMServiceFwGen1( const QString& preferredService = "", QObject* parent = 0 );

    /*!
     * @brief Set the service name
     * @param service Name of the desired service
     */

    void setService(const QString & service);
Q_SIGNALS:

    /**
     * @brief Capturing has been completed
     * @details 
                This signal is sent when capturing
     *  the content has been completed. The
                parameters
     *  returned are a string defining the mode in which the content

     *                 was captured and a string which contains
     *  the file name of the captured content.

               
     *  The mode string is one of the strings returned from the
     *  enumerateModes
                method.
            
     */
    void captureCompleted(const QString &mode, const QString &fileName);
};

}; // namespace
#endif

