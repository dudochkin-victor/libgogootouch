/*! \page commoncomponents Common components

\section components Introduction

\em A "common component" is a reusable element of the MeeGo Handset user interface. Typical components include
the standard UI controls such as buttons, sliders, and lists, as well as the more complex dialogs and menus.

Components are also \a widgets (specifically QGraphicsWidgets) and can be used wherever widgets can be used. However, all widgets cannot be regarded as components due to some unique features that common components have.

\section componentfeatures Features of common components

Common components have the following features:

- Components provide a consistent experience that fits the MeeGo Handset design
- All components are designed for finger use
- Components scale to physical sizes (in other words, millimeters instead of pixels), regardless of the device resolution or pixel density
- Components are fully stylable through CSS
- You can change the entire look-and-feel implementation of a component through theming while keeping the existing API
- Components may have alternative versions (look-and-feel) for different purposes
- Components always work in both landscape and portrait orientations
- Performance and power consumption of components is optimised

While applications are not usually created of only common components, use common components instead of custom controls where applicable to ensure that your application fits in with the rest of the MeeGo user experience. This also helps your users to transfer what they have learned from other MeeGo applications to your application.

\note For information on general MeeGo usage patterns and UI recommendations, see:
- <a href="http://meego.com/developers/ui-design-guidelines/handset/designing-your-application">Designing your Application</a>

\section componentdetails Common component types

\subsection button Button
Class: MButton

Buttons come in many form and sizes, but can fundamentally be divided into two main use cases: buttons that
execute an action when pressed and buttons that maintain a toggle state (on/off).

The following button types are available:

\image html button.png Button
- \b Push
Executes an action. Push button maintains no memory and typically executes the same action each time when pressed.

\image html iconbutton.png "Icon button"
- \b Icon
Has the same functionality as the Push button but a different appearance, since it usually replaces descriptive text. Icon button is typically used in tool bars and other places where space is limited.

\image html checkbox.png Check box
- \b Check box
Allows the user to make multiple selections from several options. There is a descriptive caption next to the check box. You can change the state of the check box by tapping the box.

\image html switch.png Switch
- \b Switch
Allows the user to set functions on and off.

\subsection list List
Class: MList

\image html list.png List

Displays objects vertically. Use a list when there are numerous items or the items are subject to change. Otherwise consider using a <a href="layouts.html">layout</a> instead.

A list can contain any type of QGraphicsWidget, but typically a MListItem is used.

\subsection textedit Text edit
Class: MTextEdit

Allows the user to input text. The edit include a single line or multiple lines, or it can expand if
necessary. When a hardware keyboard is not available, the text edit interacts with the virtual on-screen input methods.

\subsection label Label
Class: MLabel

Displays text in the UI. The MeeGo Touch label supports both markup and links.

\subsection image Image
Class: MImageWidget

Represents a single picture in the UI.

\subsection videowidget Video
Class: MVideoWidget

Supports flexible playback of video in the UI. The widget can, for example, be rotated along with the
rest of the UI and have transparent controls overlaid.

\subsection applicationpage Application page
Class: MApplicationPage

Provides one view of an application. You can typically navigate inside the application by switching between multiple pages.

\subsection applicationmenu Application menu
Class: MApplicationMenu

\image html applicationmenu.png "Application menu"

Is typically not directly accessible. Instead, actions are added to an MApplicationPage. This allows
the menu to be reconfigured automatically as the user switches between pages in the application.

The application menu consists of a list of commands related to the current application view or the entire application.

\subsection dialog Dialog
Class: MDialog

\image html dialog.png Dialog

Requires a response from the user and blocks access to the rest of the application. Unlike notifications, dialogs do not disappear from the UI without user interaction.

\subsection objectmenu Object menu

\image html objectmenu.png "Object menu"

Lists contextual actions that can be performed on a certain object. The object menu
is automatically constructed by the MeeGo Touch framework when the <a href="gestures.html">tap and hold gesture</a>
is used on a widget. The menu consists of the QActions and MActions added to the widget.

\subsection toolbar Tool bar / Tab bar

\image html toolbar.png "Tool bar in landscape"
\image html toolbar-portrait.png "Tool bar in portrait"

Tool bar lists the most important actions for the current application page/view. The tool bar is reconfigured automatically when actions are added to the currently active page.

Tab bar is an alternative way of providing navigation inside an application. A tab bar provides direct access to the most commonly used UI views.

\subsection slider Slider
Class: MSlider

\image html slider.png Slider

Allows the user to select from a range of values.

\subsection seekbar Seekbar
Class: MSeekbar

\image html seekbar.png Seek bar

Displays the amount of currently loaded content in a set value range. The seek bar is a specialised version of the slider.

\subsection combobox Combo box
Class: MCombobox

\image html combobox.png Combo box
\image html combobox-open.png "Opened combo box"

Allows the user to select a value from a pop-up list.

\subsection progressindicator Progress indicator

Shows actions that are in progress and their expected durations. If the duration is not known, the indicator can show this as well.

There are two types of progress indicators types:

\image html progressbar.png "Progress indicator, bar"
- Bar, a horizontal progress bar that fills up when the action is complete or indicates that the duration is unknown.

\image html spinner.png "Progress indicator, spinner"
- Spinner, a circular progress indicator that fills up when the action is complete or indicates unknown duration.

\subsection banner Banner
Class: MBanner

\image html banner.png Banner

Provides a drop-in notification to the user. A notification automatically disappears after a while.
A banner created by an application is only visible in that specific application. To create a system-wide notification,
use the MNotification API.

*/
