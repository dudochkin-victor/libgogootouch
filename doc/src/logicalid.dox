/*! \page logicalid Logical IDs

\section graphics Graphics

A <em>logical ID</em> is a way to unambiguously refer to graphics from the <em>theme</em>. Each and 
every asset from the theme, be it an icon, a background image, or a widget graphics object, has such an ID.

The ID abstracts the actual graphics format from the application developer, and allows
MeeGo Touch to automatically switch the graphics when the theme changes to match the new look.

\section logicalid_usage Using logical IDs

Logical IDs are typically used:

- In MeeGo Touch widget methods that require an ID
- To request graphics directly from the theme system
- In the CSS files of applications and libraries

Examples of methods that accept a logical ID:

 - MImageWidget::setImage(const QString &id, const QSize &size)
 - MAction::setIconID(const QString &id)
 - MComboBox::setIconID(const QString &id)
 - MContentItem::setImageID(const QString &id, const QSize &size)

\note If a size is not provided when requesting graphics by logical ID, the size in which the 
graphics were created in the theme itself is used, which can produce unexpected results. You should
therefore always provide a size, the only exception being MAction and MComboBox type of APIs where
the component itself already knows the exact size of the graphics.

To ensure that a widget is updated when the theme changes, provide a logical ID to the widget instead of a 
QPixmap or QImage.

In case you are implementing a widget yourself or you require a direct handle to the graphics for
some other reason, you can request a QPixmap containing particular themed graphics
using MTheme::pixmap(const QString &id, const QSize &size).

In MeeGo Touch CSS files, a logical ID can be provided for style attributes that are of MScalaleImage or QPixmap types:

\code
MButtonSwitchStyle {
    background-image: "meegotouch-button-switch-background";
    thumb-image: "meegotouch-button-switch-thumb";
    ...
}
\endcode

\section logicalid_mapping Mapping graphics to logical IDs

A themed graphical asset may be either a static image on the file system, or a single element
or group inside an SVG document. The rules for mapping a logical ID to graphics are:

- The \ref theme_structure "Theme Structure" is searched for graphical assets (SVGs, PNG, JPEGs, and so on).
- If a static image's <em>filename</em> without the suffix (PNG, JPEG, and so one) matches the logical ID, it is selected.
- If a single element's or a group's <em>Object ID</em> in an SVG document matches the logical ID, it is selected.
  - The filename of the actual SVG is not relevant to the selection
  - A single SVG file can contain any number of themed graphical elements
- Files in the <em>icons</em> directory of the theme structure are always selected based on the filename without the suffix, even if they are in SVG format.

The following figure illustrates how a single SVG document contains all of the necessary graphical assets to
draw the MButton::switchType widget:

\image html svgids.png

*/
