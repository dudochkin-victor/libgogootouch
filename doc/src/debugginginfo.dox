/*! \page debugginginfo Debugging functions

\section intro_sec Introduction

Qt provides the functions qDebug(), qWarning(), qCritical() and qFatal() for writing out warning and debug text. In MeeGo Touch the functions mDebug() and mWarning() have been added. This chapter provides an overview when to use which function.

\section overview Overview

Qt provides four functions for writing out warning and debug text:
<ul>
<li><a href="http://doc.qt.nokia.com/qtglobal.html#qDebug">qDebug()</a> is used for writing custom debug output.</li>
<li><a href="http://doc.qt.nokia.com/qtglobal.html#qWarning">qWarning()</a> is used to report warnings and recoverable errors.</li>
<li><a href="http://doc.qt.nokia.com/4.6/qtglobal.html#qCritical">qCritical()</a> is used for writing critical error messages and reporting system errors.</li>
<li><a href="http://doc.qt.nokia.com/4.6/qtglobal.html#qFatal">qFatal()</a> is used for writing fatal error messages shortly before exiting.</li>
</ul>

In MeeGo Touch, use the functions mDebug() and mWarning() instead of qDebug() and qWarning(). The mDebug() and mWarning() functions have been extended by a module name which allows message filtering (see \ref outputprefix).

Example:
\verbatim
mDebug("MComponentData") << "Testability plugin loaded successfully";
mWarning("MComponentData::setActiveWindow()") << "Attempting to activate unregistered window";
\endverbatim

The module name is usually the name of the class with an optional method prefix.

\section usage Using debugging functions

Use the debugging functions according to the following guidelines:
<ul>
<li>It is recommended that you use the debugging function with the lowest possible severity: mDebug() < mWarning() < qCritical() < qFatal(). For example, do not use mWarning() for a custom debugging output.</li>
<li>Use debugging functions rarely.</li>
<li>The text of the output should also be understandable for developers that do not maintain the module where the output has been triggered.
</ul>

\subsection mdebug mDebug()

Writes custom debug output. Add only mDebug() statements that are useful for future debugging. Remove all mDebug() statements that have only been added for fixing a current issue.

\subsection mwarning mWarning()

Reports warnings and recoverable errors. Only report a warning for unexpected events that are not already reported by the API. For example, do not report a warning if the parsing of some data failed and the failure is already reported by a return value. A warning is useful, for example, if a caching mechanism cannot be activated and this may considerably slow down the performance. In this case, the warning gives a hint about the root cause.

\subsection qcritical qCritical()

Writes critical error messages and reports system errors. Use qCritical() instead of mWarning(), if the functionality of the overall system is at risk.

\subsection qfatal qFatal()

Writes fatal error messages shortly before exiting. Use this function only if it is impossible to continue with the execution of further code. The qFatal() throws an exception.

\section controlling Controlling debugging output

MeeGo Touch allows you to control which messages are shown and optionally stream the messages into a file.

\subsection outputlevel -output-level

To specify which messages are shown, add <em>-output-level {debug|warning|critical}</em> as parameter when starting an application or set the environment variable M_OUTPUT_LEVEL.
<ul>
<li>debug: Messages from qDebug(), mDebug(), qWarning(), mWarning(), qCritical() and qFatal() are shown.</li>
<li>warning: Messages from qWarning(), mWarning(), qCritical() and qFatal() are shown.</li>
<li>critical: Messages from qCritical() and qFatal() are shown.</li>
</ul>

If no output-level has been specified, on ARM environments <em>critical</em> is used as the default value. In other environments <em>warning</em> is used as default.

\subsection outputfile -output-file

By default, the output is written to <em>stderr</em>. To stream the output into a file, use <em>-output-file {filename}</em>.

\subsection outputprefix -output-prefix, -no-output-prefix

You can specify a whitelist or blacklist for outputs with a specific prefix. To specify a whitelist, use <em>-output-prefix {prefix}</em>. To specify a blacklist, use <em>-no-output-prefix {prefix}</em>. The prefix is the given module name.

*/
